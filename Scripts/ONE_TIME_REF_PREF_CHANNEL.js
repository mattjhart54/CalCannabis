/*------------------------------------------------------------------------------------------------------/
| Program: PERMIT_ONEYEAR_INSPECTION.js  Trigger: Batch
| Client:
|
| Version 1.0 - Base Version. 03/05/2013 - Jaime Shear
|
/------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------/
|
| START: USER CONFIGURABLE PARAMETERS
|
/------------------------------------------------------------------------------------------------------*/
emailText = "";
maxSeconds = 4.5 * 60;		// number of seconds allowed for batch processing, usually < 5*60
message = "";
br = "<br>";
/*------------------------------------------------------------------------------------------------------/
| BEGIN Includes
/------------------------------------------------------------------------------------------------------*/
SCRIPT_VERSION = 2.0

eval(getScriptText("INCLUDES_ACCELA_FUNCTIONS"));
eval(getMasterScriptText("INCLUDES_CUSTOM"));
eval(getScriptText("INCLUDES_ACCELA_GLOBALS"));
eval(getScriptText("INCLUDES_BATCH"));


function getScriptText(vScriptName) {
vScriptName = vScriptName.toUpperCase();
var emseBiz = aa.proxyInvoker.newInstance("com.accela.aa.emse.emse.EMSEBusiness").getOutput();
var emseScript = emseBiz.getScriptByPK(aa.getServiceProviderCode(), vScriptName, "ADMIN");
return emseScript.getScriptText() + "";
}

function getMasterScriptText(vScriptName) {
    vScriptName = vScriptName.toUpperCase();
    var emseBiz = aa.proxyInvoker.newInstance("com.accela.aa.emse.emse.EMSEBusiness").getOutput();
    var emseScript = emseBiz.getMasterScript(aa.getServiceProviderCode(), vScriptName);
    return emseScript.getScriptText() + "";
}

/*------------------------------------------------------------------------------------------------------/
|
| END: USER CONFIGURABLE PARAMETERS
|
/------------------------------------------------------------------------------------------------------*/
showDebug = "Y";

sysDate = aa.date.getCurrentDate();
batchJobResult = aa.batchJob.getJobID()
batchJobName = "" + aa.env.getValue("BatchJobName");
wfObjArray = null;


batchJobID = 0;
if (batchJobResult.getSuccess())
  {
  batchJobID = batchJobResult.getOutput();
  logDebug("Batch Job " + batchJobName + " Job ID is " + batchJobID);
  }
else
  logDebug("Batch job ID not found " + batchJobResult.getErrorMessage());


/*----------------------------------------------------------------------------------------------------/
|
| Start: BATCH PARAMETERS
|
/------------------------------------------------------------------------------------------------------*/


/*----------------------------------------------------------------------------------------------------/
|
| End: BATCH PARAMETERS
|
/------------------------------------------------------------------------------------------------------*/
var startDate = new Date();
var timeExpired = false;


var mailFrom = lookup("ACA_EMAIL_TO_AND_FROM_SETTING","RENEW_LICENSE_AUTO_ISSUANCE_MAILFROM");
var acaSite = lookup("ACA_CONFIGS","ACA_SITE");
acaSite = acaSite.substr(0,acaSite.toUpperCase().indexOf("/ADMIN"));

var systemUserObj = aa.person.getUser("ADMIN").getOutput();


//logDebug("Historical Date Check: " + dateCheck);

/*------------------------------------------------------------------------------------------------------/
| <===========Main=Loop================>
|
/-----------------------------------------------------------------------------------------------------*/

logDebug("Start of Job");
logDebug("********************************");

if (!timeExpired) mainProcess();

logDebug("End of Job: Elapsed Time : " + elapsed() + " Seconds");



/*------------------------------------------------------------------------------------------------------/
| <===========END=Main=Loop================>
/-----------------------------------------------------------------------------------------------------*/

function mainProcess(){
	
	conArray = ['317000062','317000063','317000065','317000066','317000681','317000682','317000916','317000917','317001063','317001064','317001065','317001087','317001092','317001093','317001094','317001096','317001097','317001101','317001121','317001127','317001384','317001512','317001562','317002204','317002205','317002462','317002481','317002523','317002524','317002525','317002526','317002527','317006024','317012310','317012362','317012363','317012364','317012365','317012366','317012367','317012370','317012371','317012374','317012378','317012379','317012390','317012391','317012392','317012393','317012394','317012400','317012402','317012403','317012404','317012405','317012406','317012430','317012431','317012432','317012433','317012434','317012435','317012440','317012441','317012442','317012443','317012444','317012445','317012446','317012460','317012461','317012462','317012463','317012464','317012465','317012466','317012467','317012480','317012481','317012482','317012483','317012484','317012485','317012487','317012488','317012489','317012500','317012501','317012503','317012510','317012511','317012512','317012513','317012514','317012515','317012516','317012517','317012518','317012520','317012531','317012540','317012541','317012542','317012543','317012544','317012545','317012546','317012550','317012551','317012552','317012553','317012554','317012555','317012556','317012590','317012591','317012610','317012630','317012631','317012632','317012633','317012634','317012635','317012650','317012651','317012652','317012653','317012654','317012655','317012656','317012657','317012661','317012662','317012663','317012664','317012665','317012666','317012667','317012668','317012669','317012670','317012671','317012690','317012691','317012692','317012693','317012694','317012695','317012696','317012697','317012698','317012699','317012700','317012701','317012702','317012703','317012704','317012705','317012706','317012710','317012711','317012712','317012713','317012714','317012715','317012717','317012718','317012719','317012720','317012725','317012727','317012728','317012729','317012730','317012740','317012741','317012742','317012752','317012760','317012761','317012762','317012763','317012771','317012781','317012782','317012784','317012793','317012823','317012824','317012831','317012850','317012851','317012852','317012872','317012873','317012890','317012900','317012911','317012951','317012960','317012970','317012971','317012990','317013022','317013030','317013031','317013032','317013033','317013060','317013061','317013062','317013080','317013081','317013342','317013343','317013360','317013371','317013437','317013442','317013443','317013444','317013468','317013717','317013718','317013719','317013720','317013721','317013760','317013790','317013835','317013853','317013854','317013931','317013984','317014010','317014058','317014059','317014064','317014065','317014077','317014079','317014081','317014082','317014091','317014092','317014093','317014094','317014140','317014143','317014186','317014193','317014262','317014267','317014284','317014285','317014312','317014313','317014314','317014315','317014316','317014330','317014331','317014382','317014383','317014393','317014394','317014395','317014396','317014412','317014415','317014432','317014440','317014570','317014588','317014590','317014592','317014593','317014594','317014620','317014621','317014622','317014630','317014631','317014633','317014638','317014639','317014674','317014680','317014681','317014682','317014683','317014684','317014685','317014686','317014687','317014688','317014689','317014690','317014691','317014692','317014693','317014694','317014695','317014696','317014697','317014698','317014699','317014700','317014701','317014702','317014703','317014704','317014705','317014706','317014707','317014708','317014709','317014710','317014711','317014751','317014752','317014753','317014758','317014760','317014770','317014771','317014772','317014773','317014776','317014777','317014778','317014779','317014780','317014781','317014782','317014783','317014784','317014785','317014786','317014790','317014802','317014811','317014812','317014813','317014815','317014817','317014818','317014820','317014821','317014822','317014841','317014842','317014843','317014844','317014845','317014846','317014847','317014849','317014851','317014852','317014853','317014855','317014856','317014857','317014861','317014862','317014864','317014865','317014869','317014870','317014871','317014872','317014880','317014881','317014882','317014883','317014884','317014885','317014886','317014887','317014888','317014889','317014890','317014891','317014893','317014894','317014895','317014896','317014897','317014898','317014902','317014903','317014904','317014905','317014910','317014920','317014921','317014922','317014923','317014924','317014926','317014927','317014929','317014950','317014960','317014970','317014971','317014972','317014973','317014981','317014990','317015001','317015090','317015130','317015140','317015141','317015142','317015150','317015152','317015160','317015161','317015162','317015163','317015164','317015165','317015166','317015180','317015182','317015210','317015211','317015220','317015221','317015240','317015242','317015243','317015244','317015260','317015261','317015262','317015291','317015300','317015303','317015304','317015305','317015322','317015323','317015330','317015331','317015340','317015341','317015350','317015360','317015361','317015370','317015380','317015381','317015390','317015410','317015411','317015412','317015413','317015414','317015430','317015450','317015462','317015463','317015474','317015475','317015476','317015477','317015480','317015500','317015501','317015502','317015503','317015510','317015511','317015520','317015521','317015530','317015531','317015532','317015533','317015540','317015541','317015556','317015557','317015581','317015582','317015583','317015584','317015635','317015650','317015679','317015750','317015751','317015752','317015810','317015811','317015820','317015830','317015840','317015860','317015870','317015871','317015880','317015900','317015901','317015915','317015931','317015940','317015941','317015951','317015970','317016010','317016020','317016030','317016031','317016032','317016033','317016034','317016035','317016036','317016037','317016038','317016039','317016040','317016041','317016042','317016043','317016050','317016060','317016070','317016080','317016081','317016082','317016083','317016090','317016102','317016120','317016130','317016140','317016141','317016142','317016150','317016160','317016170','317016180','317016190','317016191','317016192','317016195','317016198','317016210','317016220','317016221','317016222','317016225','317016227','317016231','317016232','317016234','317016236','317016243','317016244','317016250','317016252','317016260','317016270','317016290','317016310','317016322','317016331','317016340','317016350','317016351','317016360','317016370','317016371','317016380','317016381','317016390','317016391','317016400','317016401','317016410','317016420','317016430','317016440','317016441','317016450','317016460','317016470','317016471','317016472','317016480','317016490','317016500','317016510','317016520','317016521','317016522','317016523','317016530','317016531','317016540','317016550','317016551','317016560','317016563','317016564','317016565','317016570','317016571','317016572','317016590','317016600','317016601','317016602','317016610','317016611','317016620','317016630','317016640','317016650','317016651','317016660','317016661','317016670','317016671','317016680','317016690','317016720','317016721','317016740','317016741','317016750','317016780','317016781','317016782','317016790','317016800','317016801','317016810','317016811','317016820','317016821','317016830','317016840','317016841','317016842','317016850','317016860','317016870','317016871','317016880','317016881','317016890','317016900','317016901','317016902','317016910','317016920','317016940','317016950','317016960','317016970','317016980','317016981','317016990','317017000','317017010','317017011','317017020','317017021','317017022','317017030','317017040','317017050','317017060','317017070','317017080','317017090','317017100','317017110','317017130','317017140','317017150','317017151','317017160','317017170','317017180','317017190','317017200','317017210','317017220','317017230','317017231','317017232','317017240','317017241','317017250','317017260','317017270','317017271','317017272','317017273','317017280','317017290','317017300','317017301','317017310','317017320','317017330','317017340','317017350','317017360','317017370','317017380','317017390','317017400','317017410','317017420','317017430','317017440','317017450','317017460','317017470','317017480','317017490','317017491','317017500','317017510','317017520','317017530','317017540','317017550','317017560','317017570'];
	
	
	
	for (x in conArray){
		//var refContactNum = co.refSeqNumber;
		var contactModelResult = aa.people.getPeople(conArray[x]);
		if (contactModelResult.getSuccess()) {
			var contactModel = contactModelResult.getOutput();
			var priChannel =  lookup("CONTACT_PREFERRED_CHANNEL","1")
			// Setting the preferred communication mode to Email.
			if (contactModel.getPreferredChannel() != "Email"){
				contactModel.setPreferredChannel(1);
				contactModel.setPreferredChannelString(priChannel);
				
			
				var refUpdateResult = aa.people.editPeople(contactModel);
				if (refUpdateResult.getSuccess()) {
					logDebug("Reference contact " + conArray[x] + " updated successfully");
				} else {
					logDebug("Reference contact " + conArray[x]  + " update failed: " + refUpdateResult.getErrorType() + ":" + refUpdateResult.getErrorMessage());
				}
			}
			
		} else {
			logDebug("Could not retrieve reference contact: " + contactModelResult.getErrorType() + ":" + contactModelResult.getErrorMessage());
		}
		//Update Transactional Contacts
		var c = aa.people.createPeopleModel().getOutput();
		c.setContactSeqNumber(conArray[x]);

		capResult = aa.people.getCapIDsByRefContact(c);
		if (capResult.getSuccess()) {
			var capList = capResult.getOutput();
			for (var j in capList) {
				var thisCapId = capList[j];
				var thatCapId = thisCapId.getCapID();
				var altId =thatCapId.getCustomID();
				capContactResult = aa.people.getCapContactByCapID(thatCapId);
				if (capContactResult.getSuccess()){
					Contacts = capContactResult.getOutput();
					for (yy in Contacts){
						var theContact = Contacts[yy].getCapContactModel();
						var peopleModel = theContact.getPeople();
						if (peopleModel.getPreferredChannel() != "Email")	{
							logDebug("Updateding Contacts in Record: " + altId);
							peopleModel.setPreferredChannel(1);
							peopleModel.setPreferredChannelString("Email");	
							
							var transUpdateResult = aa.people.editCapContactWithAttribute(theContact);
							if (transUpdateResult.getSuccess()) {
								logDebug("Transactional contact number: " + theContact.getContactSeqNumber() + " Contact Type: " + theContact.getContactType()+ " updated successfully");
							} else {
								logDebug("Transactional contact " + theContact.getContactSeqNumber()  + " update failed: " + refUpdateResult.getErrorType() + ":" + refUpdateResult.getErrorMessage());
							}
						}
					}
				}
			}
		}
	}
}
	
	
